"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../../AbstractCommand");
const __1 = require("../../..");
class TransitionDipCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'CTDp';
    }
    updateProps(newProps) {
        this._updateProps(newProps);
    }
    serialize() {
        const buffer = Buffer.alloc(8);
        buffer.writeUInt8(this.flag, 0);
        buffer.writeUInt8(this.mixEffect, 1);
        buffer.writeUInt8(this.properties.rate, 2);
        buffer.writeUInt16BE(this.properties.input, 4);
        return buffer;
    }
}
exports.TransitionDipCommand = TransitionDipCommand;
TransitionDipCommand.MaskFlags = {
    rate: 1 << 0,
    input: 1 << 1
};
class TransitionDipUpdateCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'TDpP';
    }
    deserialize(rawCommand) {
        this.mixEffect = __1.Util.parseNumberBetween(rawCommand[0], 0, 3);
        this.properties = {
            rate: __1.Util.parseNumberBetween(rawCommand[1], 0, 250),
            input: rawCommand[2] << 8 | (rawCommand[3] & 0xFF)
        };
    }
    applyToState(state) {
        const mixEffect = state.video.getMe(this.mixEffect);
        mixEffect.transitionSettings.dip = Object.assign({}, this.properties);
        return `video.ME.${this.mixEffect}.transitionSettings.dip`;
    }
}
exports.TransitionDipUpdateCommand = TransitionDipUpdateCommand;
//# sourceMappingURL=TransitionDipCommand.js.map