"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../../AbstractCommand");
const __1 = require("../../..");
class PreviewTransitionCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'CTPr';
    }
    serialize() {
        const buffer = Buffer.alloc(4);
        buffer.writeUInt8(this.mixEffect, 0);
        buffer.writeUInt8(this.properties.preview ? 1 : 0, 1);
        return buffer;
    }
}
exports.PreviewTransitionCommand = PreviewTransitionCommand;
class PreviewTransitionUpdateCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'TrPr';
    }
    deserialize(rawCommand) {
        this.mixEffect = __1.Util.parseNumberBetween(rawCommand[0], 0, 3);
        this.properties = {
            preview: rawCommand[1] === 1
        };
    }
    applyToState(state) {
        const mixEffect = state.video.getMe(this.mixEffect);
        mixEffect.transitionPreview = this.properties.preview;
        return `video.ME.${this.mixEffect}.transitionPreview`;
    }
}
exports.PreviewTransitionUpdateCommand = PreviewTransitionUpdateCommand;
//# sourceMappingURL=TransitionPreviewCommand.js.map