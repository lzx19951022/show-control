"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../../AbstractCommand");
const __1 = require("../../..");
class MixEffectKeyFlyKeyframeGetCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'KKFP';
    }
    deserialize(rawCommand) {
        this.mixEffect = __1.Util.parseNumberBetween(rawCommand[0], 0, 3);
        this.upstreamKeyerId = __1.Util.parseNumberBetween(rawCommand[1], 0, 3);
        this.properties = {
            keyFrameId: __1.Util.parseNumberBetween(rawCommand[2], 1, 2),
            // Note: these are higher than the ui shows, but are within the range the atem can be set to
            sizeX: __1.Util.parseNumberBetween(rawCommand.readUInt32BE(4), 0, Math.pow(2, 32) - 1),
            sizeY: __1.Util.parseNumberBetween(rawCommand.readUInt32BE(8), 0, Math.pow(2, 32) - 1),
            positionX: __1.Util.parseNumberBetween(rawCommand.readInt32BE(12), -32768 * 1000, 32768 * 1000),
            positionY: __1.Util.parseNumberBetween(rawCommand.readInt32BE(16), -32768 * 1000, 32768 * 1000),
            rotation: __1.Util.parseNumberBetween(rawCommand.readInt32BE(20), -332230, 332230),
            borderOuterWidth: __1.Util.parseNumberBetween(rawCommand.readUInt16BE(24), 0, 65535),
            borderInnerWidth: __1.Util.parseNumberBetween(rawCommand.readUInt16BE(26), 0, 65535),
            borderOuterSoftness: __1.Util.parseNumberBetween(rawCommand.readUInt8(28), 0, 255),
            borderInnerSoftness: __1.Util.parseNumberBetween(rawCommand.readUInt8(29), 0, 255),
            borderBevelSoftness: __1.Util.parseNumberBetween(rawCommand.readUInt8(30), 0, 255),
            borderBevelPosition: __1.Util.parseNumberBetween(rawCommand.readUInt8(31), 0, 255),
            borderOpacity: __1.Util.parseNumberBetween(rawCommand.readUInt8(32), 0, 255),
            borderHue: __1.Util.parseNumberBetween(rawCommand.readUInt16BE(34), 0, 65535),
            borderSaturation: __1.Util.parseNumberBetween(rawCommand.readUInt16BE(36), 0, 65535),
            borderLuma: __1.Util.parseNumberBetween(rawCommand.readUInt16BE(38), 0, 65535),
            lightSourceDirection: __1.Util.parseNumberBetween(rawCommand.readUInt16BE(40), 0, 65535),
            lightSourceAltitude: __1.Util.parseNumberBetween(rawCommand.readUInt8(42), 0, 254),
            maskEnabled: rawCommand[43] === 1,
            maskTop: __1.Util.parseNumberBetween(rawCommand.readInt16BE(44), -9000, 9000),
            maskBottom: __1.Util.parseNumberBetween(rawCommand.readInt16BE(46), -9000, 9000),
            maskLeft: __1.Util.parseNumberBetween(rawCommand.readInt16BE(48), -16000, 16000),
            maskRight: __1.Util.parseNumberBetween(rawCommand.readInt16BE(50), -16000, 16000)
        };
    }
    applyToState(state) {
        const mixEffect = state.video.getMe(this.mixEffect);
        const upstreamKeyer = mixEffect.getUpstreamKeyer(this.upstreamKeyerId);
        upstreamKeyer.flyKeyframes[this.properties.keyFrameId] = Object.assign({}, this.properties);
        return `video.ME.${this.mixEffect}.upstreamKeyers.${this.upstreamKeyerId}.flyKeyframes.${this.properties.keyFrameId}`;
    }
}
exports.MixEffectKeyFlyKeyframeGetCommand = MixEffectKeyFlyKeyframeGetCommand;
//# sourceMappingURL=MixEffectKeyFlyKeyframeGetCommand.js.map