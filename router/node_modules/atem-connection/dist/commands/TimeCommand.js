"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("./AbstractCommand");
const Enums = require("../enums");
class TimeCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'Time';
        this.properties = {
            hour: 0,
            minute: 0,
            second: 0,
            frame: 0,
            dropFrame: false
        };
    }
    serialize() {
        const buffer = Buffer.alloc(8);
        buffer.writeUInt8(this.properties.hour, 0);
        buffer.writeUInt8(this.properties.minute, 1);
        buffer.writeUInt8(this.properties.second, 2);
        buffer.writeUInt8(this.properties.frame, 3);
        buffer.writeUInt8(this.properties.dropFrame ? 1 : 0, 5);
        return buffer;
    }
    deserialize(rawCommand) {
        this.properties = {
            hour: rawCommand.readUInt8(0),
            minute: rawCommand.readUInt8(1),
            second: rawCommand.readUInt8(2),
            frame: rawCommand.readUInt8(3),
            // Byte 4 looks to be a field marker
            dropFrame: rawCommand.readUInt8(5) === 1
        };
    }
    applyToState(state) {
        state.info.lastTime = this.properties;
        return 'info.lastTime';
    }
}
exports.TimeCommand = TimeCommand;
class TimeRequestCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'TiRq';
        this.minimumVersion = Enums.ProtocolVersion.V8_0;
        this.properties = {};
    }
    serialize() {
        const buffer = Buffer.alloc(0);
        return buffer;
    }
}
exports.TimeRequestCommand = TimeRequestCommand;
//# sourceMappingURL=TimeCommand.js.map