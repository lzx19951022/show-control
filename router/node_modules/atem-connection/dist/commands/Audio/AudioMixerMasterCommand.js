"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../AbstractCommand");
const __1 = require("../..");
class AudioMixerMasterCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'CAMM';
    }
    serialize() {
        const buffer = Buffer.alloc(8);
        buffer.writeUInt8(this.flag, 0);
        buffer.writeUInt16BE(__1.Util.DecibelToUInt16BE(this.properties.gain || 0), 2);
        buffer.writeInt16BE(__1.Util.BalanceToInt(this.properties.balance || 0), 4);
        buffer.writeUInt8(this.properties.followFadeToBlack ? 0x01 : 0x00, 6); // Note: I never got this one to work
        return buffer;
    }
}
exports.AudioMixerMasterCommand = AudioMixerMasterCommand;
AudioMixerMasterCommand.MaskFlags = {
    gain: 1 << 0,
    balance: 1 << 1,
    followFadeToBlack: 1 << 2
};
class AudioMixerMasterUpdateCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'AMMO';
    }
    deserialize(rawCommand) {
        this.properties = {
            gain: __1.Util.UInt16BEToDecibel(rawCommand.readUInt16BE(0)),
            balance: __1.Util.IntToBalance(rawCommand.readInt16BE(2)),
            followFadeToBlack: rawCommand.readInt8(4) === 1
        };
    }
    applyToState(state) {
        state.audio.master = Object.assign(Object.assign({}, state.audio.master), this.properties);
        return `audio.master`;
    }
}
exports.AudioMixerMasterUpdateCommand = AudioMixerMasterUpdateCommand;
//# sourceMappingURL=AudioMixerMasterCommand.js.map