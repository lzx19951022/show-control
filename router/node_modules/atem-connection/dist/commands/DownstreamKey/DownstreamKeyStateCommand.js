"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../AbstractCommand");
const __1 = require("../..");
const enums_1 = require("../../enums");
class DownstreamKeyStateCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'DskS';
    }
    deserialize(rawCommand) {
        this.downstreamKeyerId = __1.Util.parseNumberBetween(rawCommand[0], 0, 3);
        this.properties = {
            onAir: rawCommand[1] === 1,
            inTransition: rawCommand[2] === 1,
            isAuto: rawCommand[3] === 1,
            remainingFrames: rawCommand[4]
        };
    }
    applyToState(state) {
        state.video.downstreamKeyers[this.downstreamKeyerId] = Object.assign(Object.assign({}, state.video.downstreamKeyers[this.downstreamKeyerId]), this.properties);
        return `video.downstreamKeyers.${this.downstreamKeyerId}`;
    }
}
exports.DownstreamKeyStateCommand = DownstreamKeyStateCommand;
class DownstreamKeyStateV8Command extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'DskS';
        this.minimumVersion = enums_1.ProtocolVersion.V8_0_1;
    }
    deserialize(rawCommand) {
        this.downstreamKeyerId = __1.Util.parseNumberBetween(rawCommand[0], 0, 3);
        this.properties = {
            onAir: rawCommand[1] === 1,
            inTransition: rawCommand[2] === 1,
            isAuto: rawCommand[3] === 1,
            isTowardsOnAir: rawCommand[4] === 1,
            remainingFrames: rawCommand[5]
        };
    }
    applyToState(state) {
        state.video.downstreamKeyers[this.downstreamKeyerId] = Object.assign(Object.assign({}, state.video.downstreamKeyers[this.downstreamKeyerId]), this.properties);
        return `video.downstreamKeyers.${this.downstreamKeyerId}`;
    }
}
exports.DownstreamKeyStateV8Command = DownstreamKeyStateV8Command;
//# sourceMappingURL=DownstreamKeyStateCommand.js.map