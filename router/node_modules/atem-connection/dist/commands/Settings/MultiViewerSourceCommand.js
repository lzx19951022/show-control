"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AbstractCommand_1 = require("../AbstractCommand");
class MultiViewerSourceCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'CMvI';
    }
    updateProps(newProps) {
        this._updateProps(newProps);
    }
    serialize() {
        const buffer = Buffer.alloc(4);
        buffer.writeUInt8(this.multiViewerId, 0);
        buffer.writeUInt8(this.properties.windowIndex, 1);
        buffer.writeUInt16BE(this.properties.source, 2);
        return buffer;
    }
}
exports.MultiViewerSourceCommand = MultiViewerSourceCommand;
class MultiViewerSourceUpdateCommand extends AbstractCommand_1.default {
    constructor() {
        super(...arguments);
        this.rawName = 'MvIn';
    }
    deserialize(rawCommand) {
        this.index = rawCommand.readUInt8(1);
        this.multiViewerId = rawCommand.readUInt8(0);
        this.properties = {
            source: rawCommand.readUInt16BE(2),
            windowIndex: rawCommand.readUInt8(1)
        };
    }
    applyToState(state) {
        const multiviewer = state.settings.getMultiViewer(this.multiViewerId);
        multiviewer.windows[this.index] = Object.assign(Object.assign({}, multiviewer.windows[this.index]), this.properties);
        return `settings.multiViewers.${this.multiViewerId}.windows.${this.index}`;
    }
}
exports.MultiViewerSourceUpdateCommand = MultiViewerSourceUpdateCommand;
//# sourceMappingURL=MultiViewerSourceCommand.js.map